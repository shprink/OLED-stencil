var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
/*! Built with http://stenciljs.com */
App.loadBundle("./chunk1.js", ["exports"], function (t) { window.App.h; var e = "#f00", n = "#fff", i = "#000", o = "transparent", f = "#83401f", r = "#ffbc77", u = "#06f", c = "#ff0", a = "#ff8000", s = "#5ac528", l = "#fefe00", p = "#823e00", h = "#fe4100", d = "#f0c3aa", S = "#f7f7f7"; function E() { return [[o, o, o, o, o, i, i, i, i, i, i, o, o, o, o, o], [o, o, o, i, i, e, e, e, e, n, n, i, i, o, o, o], [o, o, i, n, n, e, e, e, e, n, n, n, n, i, o, o], [o, i, n, n, e, e, e, e, e, e, n, n, n, n, i, o], [o, i, n, e, e, n, n, n, n, e, e, n, n, n, i, o], [i, e, e, e, n, n, n, n, n, n, e, e, e, e, e, i], [i, e, e, e, n, n, n, n, n, n, e, e, n, n, e, i], [i, n, e, e, n, n, n, n, n, n, e, n, n, n, n, i], [i, n, n, e, e, n, n, n, n, e, e, n, n, n, n, i], [i, n, n, e, e, e, e, e, e, e, e, e, n, n, e, i], [i, n, e, e, i, i, i, i, i, i, i, i, e, e, e, i], [o, i, i, i, n, n, i, n, n, i, n, n, i, i, i, o], [o, o, i, n, n, n, i, n, n, i, n, n, n, i, o, o], [o, o, i, n, n, n, n, n, n, n, n, n, n, i, o, o], [o, o, o, i, n, n, n, n, n, n, n, n, i, o, o, o], [o, o, o, o, i, i, i, i, i, i, i, i, o, o, o, o]]; } var g = { width: 16, height: 16, pixelSize: 16, pixels: E() }, w = { setNewResolution: function (t, e, n) { return ({ type: "SCREEN/SET_RESOLUTION", payload: { width: t, height: e, pixelSize: n } }); }, setPixels: function (t) { return function (e) { return (x = void 0, y = void 0, N = void 0, R = function () { return __generator(this, function (_a) {
        return [2 /*return*/, e({ type: "SCREEN/SET_PIXELS", payload: { pixels: t } })];
    }); }, new (N || (N = Promise))(function (t, e) { function n(t) { try {
        o(R.next(t));
    }
    catch (t) {
        e(t);
    } } function i(t) { try {
        o(R.throw(t));
    }
    catch (t) {
        e(t);
    } } function o(e) { e.done ? t(e.value) : new N(function (t) { t(e.value); }).then(n, i); } o((R = R.apply(x, y || [])).next()); })); }; } }; var x, y, N, R; t.getMario = function () { return [[o, o, o, o, e, e, e, e, e, e, o, o, o, o, o, o], [o, o, o, e, e, e, e, e, e, e, e, e, e, o, o, o], [o, o, o, f, f, f, r, r, r, i, r, o, o, o, o, o], [o, o, f, r, f, r, r, r, r, i, r, r, r, o, o, o], [o, o, f, r, f, f, r, r, r, r, i, r, r, r, o, o], [o, o, f, f, r, r, r, r, r, i, i, i, i, o, o, o], [o, o, o, o, r, r, r, r, r, r, r, r, o, o, o, o], [o, o, o, e, e, u, e, e, e, e, o, o, o, o, o, o], [o, o, e, e, e, u, e, e, u, e, e, e, e, o, o, o], [o, e, e, e, e, u, u, u, u, e, e, e, e, o, o, o], [o, r, r, e, u, c, u, u, c, u, e, r, r, o, o, o], [o, r, r, r, u, u, u, u, u, u, r, r, r, o, o, o], [o, r, r, u, u, u, u, u, u, u, u, r, r, o, o, o], [o, o, o, u, u, u, o, o, u, u, u, o, o, o, o, o], [o, o, f, f, f, o, o, o, o, f, f, f, o, o, o, o], [o, f, f, f, f, o, o, o, o, f, f, f, f, o, o, o]]; }, t.getBoo = function () { return [[o, o, o, o, o, i, i, i, i, i, o, o, o, o, o, o], [o, o, o, i, i, n, n, n, n, n, i, i, o, o, o, o], [o, o, i, n, n, n, n, n, n, n, n, n, i, o, o, o], [o, i, n, n, n, n, n, n, n, n, n, n, n, i, o, o], [o, i, n, i, n, i, n, n, n, n, n, n, n, n, i, o], [i, n, n, i, n, i, n, n, n, n, i, i, i, n, n, i], [i, n, n, i, n, i, n, n, n, i, n, n, i, n, n, i], [i, n, n, n, n, n, n, n, n, n, n, n, i, n, i, o], [i, n, e, n, e, n, e, n, n, n, n, i, n, n, n, i], [i, n, e, e, e, e, e, n, n, n, n, n, n, n, n, i], [i, n, e, e, e, e, e, n, n, n, n, n, n, n, n, i], [o, i, n, e, e, e, e, e, n, n, n, n, n, n, n, i], [o, i, n, e, n, e, n, e, n, n, n, n, n, n, i, o], [o, o, i, n, n, n, n, n, n, n, n, n, n, i, o, o], [o, o, o, i, i, n, n, n, n, n, n, i, i, o, o, o], [o, o, o, o, o, i, i, i, i, i, i, o, o, o, o, o]]; }, t.getChance = function () { return [[o, f, f, f, f, f, f, f, f, f, f, f, f, f, f, o], [f, r, r, r, r, r, r, r, r, r, r, r, r, r, r, i], [f, r, i, r, r, r, r, r, r, r, r, r, r, i, r, i], [f, r, r, r, r, f, f, f, f, f, r, r, r, r, r, i], [f, r, r, r, f, f, i, i, i, f, f, r, r, r, r, i], [f, r, r, r, f, f, i, r, r, f, f, i, r, r, r, i], [f, r, r, r, f, f, i, r, r, f, f, i, r, r, r, i], [f, r, r, r, r, i, i, r, f, f, f, i, r, r, r, i], [f, r, r, r, r, r, r, f, f, i, i, i, r, r, r, i], [f, r, r, r, r, r, r, f, f, i, r, r, r, r, r, i], [f, r, r, r, r, r, r, r, i, i, r, r, r, r, r, i], [f, r, r, r, r, r, r, f, f, r, r, r, r, r, r, i], [f, r, r, r, r, r, r, f, f, i, r, r, r, r, r, i], [f, r, i, r, r, r, r, r, i, i, r, r, r, i, r, i], [f, r, r, r, r, r, r, r, r, r, r, r, r, r, r, i], [i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i]]; }, t.getFlower = function () { return [[o, o, o, i, i, i, i, i, i, i, i, i, i, o, o, o], [o, i, i, i, a, a, a, a, a, a, a, a, i, i, i, o], [i, i, a, a, a, c, c, c, c, c, c, a, a, a, i, i], [i, a, a, c, c, c, i, n, n, i, c, c, c, a, a, i], [i, a, a, c, c, c, i, c, c, i, c, c, c, a, a, i], [i, a, a, a, a, c, c, c, c, c, c, a, a, a, a, i], [i, i, a, a, a, a, a, a, a, a, a, a, a, a, i, i], [o, i, i, i, a, a, a, a, a, a, a, a, i, i, i, o], [o, o, o, i, i, i, i, i, i, i, i, i, i, o, o, o], [o, i, i, o, o, o, i, s, s, i, o, o, o, i, i, o], [i, s, s, i, i, o, i, s, s, i, o, i, i, s, s, i], [i, s, s, s, s, i, i, s, s, i, i, s, s, s, s, i], [i, s, s, s, s, s, i, s, s, i, s, s, s, s, s, i], [o, i, s, s, s, s, i, s, s, i, s, s, s, s, i, o], [o, o, i, i, s, s, s, s, s, s, s, s, i, i, o, o], [o, o, o, o, i, i, i, i, i, i, i, i, o, o, o, o]]; }, t.getMushroom = E, t.getStar = function () { return [[o, o, o, o, o, o, o, i, i, o, o, o, o, o, o, o], [o, o, o, o, o, o, i, c, c, i, o, o, o, o, o, o], [o, o, o, o, o, o, i, c, c, i, o, o, o, o, o, o], [o, o, o, o, o, i, c, c, c, c, i, o, o, o, o, o], [i, i, i, i, i, i, c, c, c, c, i, i, i, i, i, i], [i, c, c, c, c, c, c, c, c, c, c, c, c, c, c, i], [o, i, c, c, c, c, i, c, c, i, c, c, c, c, i, o], [o, o, i, c, c, c, i, c, c, i, c, c, c, i, o, o], [o, o, o, i, c, c, i, c, c, i, c, c, i, o, o, o], [o, o, o, i, c, c, c, c, c, c, c, c, i, o, o, o], [o, o, i, c, c, c, c, c, c, c, c, c, c, i, o, o], [o, o, i, c, c, c, c, c, c, c, c, c, c, i, o, o], [o, i, c, c, c, c, c, i, i, c, c, c, c, c, i, o], [o, i, c, c, c, i, i, o, o, i, i, c, c, c, i, o], [i, c, c, i, i, o, o, o, o, o, o, i, i, c, c, i], [i, i, i, o, o, o, o, o, o, o, o, o, o, i, i, i]]; }, t.getPika = function () { return [[[o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o], [o, o, o, o, i, i, o, o, o, o, o, o, o, o, o, o], [i, i, i, i, i, i, i, i, i, o, o, o, o, o, o, o], [i, l, l, l, i, i, i, l, l, i, i, i, o, o, o, o], [o, i, l, l, l, i, l, l, l, l, l, l, i, o, o, o], [o, o, i, l, l, i, i, l, l, l, l, l, l, i, o, o], [o, o, o, i, l, l, i, l, l, l, l, l, l, i, o, o], [o, i, i, i, l, i, l, l, l, l, l, i, l, l, i, o], [o, i, l, l, i, i, l, l, l, h, l, l, l, l, i, o], [o, o, i, p, i, p, p, p, l, l, l, l, l, i, o, o], [o, i, p, p, i, l, l, l, l, l, l, i, l, i, o, o], [o, o, i, p, i, p, p, p, l, l, i, i, l, i, o, o], [o, o, o, i, i, i, l, l, l, l, l, l, i, i, o, o], [o, o, o, i, l, i, i, l, l, l, l, i, l, l, i, o], [o, o, o, o, i, l, l, i, i, i, i, o, i, i, o, o], [o, o, o, o, o, i, i, o, o, o, o, o, o, o, o, o]], [[o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o], [o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o], [o, o, o, o, i, i, o, o, o, o, o, o, o, o, o, o], [i, i, i, i, i, i, i, i, i, o, o, o, o, o, o, o], [i, l, l, l, i, i, i, l, l, i, i, i, o, o, o, o], [o, i, l, l, l, i, l, l, l, l, l, l, i, o, o, o], [o, o, i, l, l, i, i, l, l, l, l, l, l, i, o, o], [o, o, o, i, l, l, i, l, l, l, l, l, l, i, o, o], [o, i, i, i, l, i, l, l, l, l, l, i, l, l, i, o], [o, i, l, l, l, i, l, l, l, h, l, l, l, l, i, o], [o, o, i, p, i, p, p, p, l, l, l, l, l, i, o, o], [o, i, p, p, i, l, l, l, l, l, l, i, l, i, o, o], [o, o, i, p, i, p, p, p, l, l, i, i, l, i, o, o], [o, o, o, i, i, i, l, l, l, l, l, l, l, i, o, o], [o, o, o, o, o, o, i, i, l, l, l, i, i, o, o, o], [o, o, o, o, o, o, o, o, i, i, i, o, o, o, o, o]]]; }, t.getAsh = function () { return [[[o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o], [o, o, o, o, i, i, i, i, i, i, o, o, o, o, o, o], [o, o, o, i, e, e, e, e, e, e, i, o, o, o, o, o], [o, o, i, e, e, e, e, e, e, e, e, i, o, o, o, o], [o, o, i, e, e, e, e, e, e, e, S, i, i, o, o, o], [o, i, i, i, e, e, e, e, e, S, S, S, S, i, o, o], [o, i, i, i, i, i, i, i, e, e, e, i, i, o, o, o], [o, i, i, i, i, i, i, r, r, i, r, i, o, o, o, o], [o, o, i, i, r, r, i, r, r, i, r, i, o, o, o, o], [o, o, o, i, r, r, r, r, r, r, r, i, o, o, o, o], [o, o, i, u, i, i, r, r, r, d, i, o, o, o, o, o], [o, o, i, u, i, i, i, i, i, i, o, o, o, o, o, o], [o, o, i, i, r, r, i, i, i, i, i, i, o, o, o, o], [o, i, n, i, r, r, i, n, n, i, n, n, i, o, o, o], [o, i, n, n, i, i, i, i, i, n, n, i, o, o, o, o], [o, o, i, i, o, o, o, o, i, i, i, o, o, o, o, o]], [[o, o, o, o, i, i, i, i, i, i, o, o, o, o, o, o], [o, o, o, i, e, e, e, e, e, e, i, o, o, o, o, o], [o, o, i, e, e, e, e, e, e, e, e, i, o, o, o, o], [o, o, i, e, e, e, e, e, e, e, S, i, i, o, o, o], [o, i, i, i, e, e, e, e, e, S, S, S, S, i, o, o], [o, i, i, i, i, i, i, i, e, e, e, i, i, o, o, o], [o, i, i, i, i, i, i, r, r, i, r, i, o, o, o, o], [o, o, i, i, r, r, i, r, r, i, r, i, o, o, o, o], [o, o, o, i, r, r, r, r, r, r, r, i, o, o, o, o], [o, o, i, u, i, i, r, r, r, d, i, o, o, o, o, o], [o, o, i, u, u, i, i, i, i, i, o, o, o, o, o, o], [o, o, i, u, i, r, r, i, i, o, o, o, o, o, o, o], [o, o, i, u, i, r, r, i, i, o, o, o, o, o, o, o], [o, o, o, i, i, i, i, n, n, i, o, o, o, o, o, o], [o, o, o, o, i, n, n, n, n, i, o, o, o, o, o, o], [o, o, o, o, o, i, i, i, i, o, o, o, o, o, o, o]]]; }, t.actions = w, t.default = (function (t, e) {
    if (t === void 0) { t = g; }
    switch (e.type) {
        case "SCREEN/SET_RESOLUTION": {
            var _a = e.payload, n_1 = _a.width, i_1 = _a.height, o_1 = _a.pixelSize;
            return Object.assign({}, t, { width: n_1, height: i_1, pixelSize: o_1 });
        }
        case "SCREEN/SET_PIXELS": {
            var n_2 = e.payload.pixels;
            return Object.assign({}, t, { pixels: n_2 });
        }
        default: return t;
    }
}); });
